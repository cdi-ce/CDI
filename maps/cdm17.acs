#include "zcommon.acs"

bool SecretSwitchAvailable = FALSE;
bool SecretSwitchActivated = FALSE;

Script 1 ENTER
{// Enter Map Message
SetHudSize(640, 400, 0);
Setfont("dbigfont");
Hudmessage(s:"\c[O3]Hitler's Secret Bunker";HUDMSG_FADEOUT, 0, CR_DARKGREY, 320.4, 190.0, 3.5, 1.0);
Setfont("smallfont");
Hudmessage(s:"By \cgblood"; HUDMSG_FADEOUT, 0, CR_WHITE, 320.4, 205.0, 3.5, 1.0);
}

Script 2 OPEN
{// Map Settings
Thing_Move(15,random(25,27),TRUE);
Scroll_Texture_Both(1,0,0,0,200);
Scroll_Texture_Both(-1,0,0,0,200);
Scroll_Texture_Both(2,0,0,0,200);
Scroll_Texture_Both(-2,0,0,0,200);
Scroll_Texture_Both(3,0,0,0,200);
Scroll_Texture_Both(-3,0,0,0,200);
delay(1);
int moveyellowcard = random(1,3);
if(moveyellowcard == 2)Thing_Move(100,110,TRUE);
else if(moveyellowcard == 3)Thing_Move(100,111,TRUE);
int moveredcard = random(1,3);
if(moveredcard == 2)Thing_Move(101,112,TRUE);
else if(moveredcard == 3)Thing_Move(101,113,TRUE);
}

Script 3 OPEN
{// Invasion Progress
while((GetInvasionWave() != 1) || (GetInvasionState() != IS_WAVECOMPLETE))delay(1);
ACS_ExecuteAlways(15854,0,1,0,0);// Remove Wave Monsters
ACS_ExecuteAlways(3006,0,1,0,0);// Reinforcement
Floor_LowerByValue(1,20,118);
while((GetInvasionWave() != 2) || (GetInvasionState() != IS_WAVECOMPLETE))delay(1);
ACS_ExecuteAlways(15854,0,2,0,0);// Remove Wave Monsters
ACS_ExecuteAlways(3006,0,1,0,0);// Reinforcement
while((GetInvasionWave() != 3) || (GetInvasionState() != IS_WAVECOMPLETE))delay(1);
ACS_ExecuteAlways(15854,0,3,0,0);// Remove Wave Monsters
ACS_ExecuteAlways(3006,0,1,0,0);// Reinforcement
ACS_Execute(4,0,1,0,0);// Unblock Line
while((GetInvasionWave() != 4) || (GetInvasionState() != IS_COUNTDOWN))delay(1);
ACS_ExecuteAlways(15854,0,4,0,0);// Remove Wave Monsters
ACS_ExecuteAlways(3006,0,1,0,0);// Reinforcement
delay(35*16);
Floor_LowerByValue(3,5,118);
Floor_LowerByValue(7,5,118);
while((GetInvasionWave() != 5) || (GetInvasionState() != IS_WAVECOMPLETE))delay(1);
ACS_ExecuteAlways(15854,0,5,0,0);// Remove Wave Monsters
ACS_ExecuteAlways(3006,0,1,0,0);// Reinforcement
while((GetInvasionWave() != 6) || (GetInvasionState() != IS_WAVECOMPLETE))delay(1);
ACS_ExecuteAlways(15854,0,6,0,0);// Remove Wave Monsters
ACS_ExecuteAlways(3006,0,1,0,0);// Reinforcement
Ceiling_RaiseByValue(4,20,118);
while((GetInvasionWave() != 7) || (GetInvasionState() != IS_COUNTDOWN))delay(1);
ACS_ExecuteAlways(15854,0,7,0,0);// Remove Wave Monsters
ACS_ExecuteAlways(3006,0,1,0,0);// Reinforcement
delay(35*16);
Floor_LowerByValue(6,20,254);
tagwait(6);
Door_Open(5,30);
while((GetInvasionWave() != 8) || (GetInvasionState() != IS_WAVECOMPLETE))delay(1);
ACS_ExecuteAlways(15854,0,8,0,0);// Remove Wave Monsters
ACS_ExecuteAlways(3006,0,1,0,0);// Reinforcement
while((GetInvasionWave() != 9) || (GetInvasionState() != IS_WAVECOMPLETE))delay(1);
ACS_ExecuteAlways(15854,0,9,0,0);// Remove Wave Monsters
ACS_ExecuteAlways(3006,0,1,0,0);// Reinforcement
}

Script 4 (int iLine)
{// Unblock Line
For(int i=100;i>=0;i-=5)
{
    TranslucentLine(iLine,i);
    delay(1);
}
SetLineBlocking(iLine,BLOCK_NOTHING);
}

Script 6 (int Typ)
{// Jumpad
if(Typ == 1)
{
    LocalAmbientSound("world/jumpad",127);
    ThrustThingZ(0,110,0,0);
    if(PlayerNumber() == -1){delay(15);ThrustThing((GetActorAngle(0)*255)>>16,5,1,0);}
}
else if(Typ == 2 && PlayerNumber() != -1)
{
    LocalAmbientSound("world/jumpad",127);
    ThrustThingZ(0,135,0,0);
}
else if(Typ == 3 && PlayerNumber() == -1)
{
    ThrustThingZ(0,95,0,1);
    ThrustThing(0,12,0,0);
}
}

Script 7 (void)
{// Test
ACS_ExecuteAlways(15854,0,1,0,0);delay(1);
ACS_ExecuteAlways(15854,0,2,0,0);delay(1);
ACS_ExecuteAlways(15854,0,3,0,0);delay(1);
ACS_ExecuteAlways(15854,0,4,0,0);delay(1);
ACS_ExecuteAlways(15854,0,5,0,0);delay(1);
ACS_ExecuteAlways(15854,0,6,0,0);delay(1);
ACS_ExecuteAlways(15854,0,7,0,0);delay(1);
ACS_ExecuteAlways(15854,0,8,0,0);delay(1);
ACS_ExecuteAlways(15854,0,9,0,0);delay(1);
ACS_ExecuteAlways(15854,0,10,0,0);delay(1);
}

Script 8 (void)
{// Blue Key Card Secret Part-1
Floor_RaiseByValue(12,5,32);
TagWait(12);
SecretSwitchAvailable = TRUE;
delay(35*10);
SecretSwitchAvailable = FALSE;
Floor_LowerByValue(12,5,32);
TagWait(12);
}

Script 9 (void)
{// Blue Key Card Secret Part-2
if(SecretSwitchAvailable == TRUE && SecretSwitchActivated == FALSE)
{
	ACS_Execute(4,0,3,0,0);// Unblock Line
	PrintBold(s:"A forcefield has been deactivated!");
	SecretSwitchActivated = TRUE;
	Teleport(73,0,FALSE);
}
}

Script 940 (int part)
{//Boss Fight Script
	delay(1);
	str class = GetActorClass(0);
	str resistance = GetActorProperty(0,APROP_DamageFactor);
	GiveInventory("Clip",1);
	if(part == 1)
	{
		Thing_Move(0,939,0);
		SpawnSpotFacing("TodesRitter",941,15999);SpawnSpotFacing("TeleportFog",941,0);//Hitler
		delay(35*3);while(ThingCount(T_NONE,15999))delay(1);
		while(ThingCountNameSector(class,0,939)){delay(1);Thing_Move(0,940,0);}
		SetActorProperty(0,APROP_DamageFactor,0.01);delay(35*30);SetActorProperty(0,APROP_DamageFactor,resistance);
		while(ThingCountSector(T_NONE,0,939)){SectorDamage(939,5000,"Crush","Clip",DAMAGE_NONPLAYERS|DAMAGE_IN_AIR);delay(1);}
	}
	else if(part == 2)
	{
		Thing_Move(0,939,0);
		SpawnSpotFacing("SSHitlerClone",942,15999);SpawnSpotFacing("TeleportFog",942,0);//Toddes
		delay(35*3);while(ThingCount(T_NONE,15999))delay(1);
		while(ThingCountNameSector(class,0,939)){delay(1);Thing_Move(0,940,0);}
		SetActorProperty(0,APROP_DamageFactor,0.01);delay(35*30);SetActorProperty(0,APROP_DamageFactor,resistance);
		while(ThingCountSector(T_NONE,0,939)){SectorDamage(939,5000,"Crush","Clip",DAMAGE_NONPLAYERS|DAMAGE_IN_AIR);delay(1);}
	}
	else if(part == 3)
	{
		Thing_Move(0,939,0);
		SpawnSpotFacing("SSEnforcer",943,15999);SpawnSpotFacing("TeleportFog",943,0);//Cardinal
		delay(35*3);while(ThingCount(T_NONE,15999))delay(1);
		while(ThingCountNameSector(class,0,939)){delay(1);Thing_Move(0,940,0);}
		SetActorProperty(0,APROP_DamageFactor,0.01);delay(35*30);SetActorProperty(0,APROP_DamageFactor,resistance);
		while(ThingCountSector(T_NONE,0,939)){SectorDamage(939,5000,"Crush","Clip",DAMAGE_NONPLAYERS|DAMAGE_IN_AIR);delay(1);}
	}
}

Script 5430 (void){}
Script 5431 (void){}
Script 5432 (void){}
Script 5433 (void){}