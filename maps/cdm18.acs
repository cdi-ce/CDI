#include "zcommon.acs"

bool MechTeleporterAvailable = FALSE;
bool FirstGateAvailable = FALSE;
bool FirstGateOpened = FALSE;

Script 1 ENTER
{// Enter Map Message
SetHudSize(640, 400, 0);
Setfont("dbigfont");
Hudmessage(s:"\c[Y7]Onata Highway";HUDMSG_FADEOUT, 0, CR_GREY, 320.4, 190.0, 3.5, 1.0);
Setfont("smallfont");
Hudmessage(s:"By \cgblood"; HUDMSG_FADEOUT, 0, CR_WHITE, 320.4, 205.0, 3.5, 1.0);
}

Script 2 OPEN
{// Map Settings
Ceiling_Waggle(27,64*8,32,0,0);
Floor_Waggle(27,64*8,32,0,0);
ACS_NamedExecuteAlways("Set Incursion Radius",0,96.0,0,0);
delay(1);
Thing_Deactivate(310);
int moveredcard = random(1,2);
if(moveredcard == 2)Thing_Move(30,31,TRUE);
int movebluecard = random(1,3);
if(movebluecard == 2)Thing_Move(20,21,TRUE);
else if(movebluecard == 3)Thing_Move(20,22,TRUE);
SpawnSpotFacingForced("YellowCard",random(30,32),0);
}

Script 3 OPEN
{// Invasion Progress
while((GetInvasionWave() != 1) || (GetInvasionState() != IS_WAVECOMPLETE))delay(1);
ACS_ExecuteAlways(15854,0,1,0,0);// Remove Wave Monsters
ACS_ExecuteAlways(3006,0,1,0,0);// Reinforcement
Door_Open(1,12);
Thing_Activate(85001);//Activates (Hell Incursion Moving Spot)
while((GetInvasionWave() != 2) || (GetInvasionState() != IS_COUNTDOWN))delay(1);
ACS_ExecuteAlways(15854,0,2,0,0);// Remove Wave Monsters
ACS_ExecuteAlways(3006,0,2,0,0);// Reinforcement
ACS_NamedExecuteAlways("Reset Incursion Settings",0,128.0,0,0);delay(1);
Thing_Activate(85002);//Activates (Hell Incursion Moving Spot)
delay(35*12);
Floor_LowerbyValue(4,15,246);
while((GetInvasionWave() != 3) || (GetInvasionState() != IS_COUNTDOWN))delay(1);
ACS_ExecuteAlways(15854,0,3,0,0);// Remove Wave Monsters
ACS_ExecuteAlways(3006,0,3,0,0);// Reinforcement
ACS_NamedExecuteAlways("Enable Body Remover",0,0,0,0);
SetMusic("",0);
delay(35*10);
Door_Open(6,6,0);
PrintBold(s:"The vehicle hangar has been opened!");
MechTeleporterAvailable = TRUE;
delay(35*8);
SetMusic("D_CDM18b");
delay(35*4);
ACS_Execute(4,0,1,0,0);
Floor_LowerByValue(8,15,238);
while((GetInvasionWave() != 4) || (GetInvasionState() != IS_COUNTDOWN))delay(1);
ACS_ExecuteAlways(15854,0,4,0,0);// Remove Wave Monsters
ACS_ExecuteAlways(3006,0,4,0,0);// Reinforcement
Thing_ChangeTID(351,0);
Thing_ChangeTID(352,351);
ACS_NamedExecuteAlways("Reset Incursion Settings",0,224.0,0,0);delay(1);
Thing_Activate(85003);//Activates (Hell Incursion Moving Spot)
delay(35*2);
Floor_RaiseByValue(24,15,64);
TagWait(24);
FirstGateAvailable = TRUE;
SpawnSpotFacing("MapIndicator",50,51);
while((GetInvasionWave() != 5) || (GetInvasionState() != IS_WAVECOMPLETE))delay(1);
ACS_ExecuteAlways(15854,0,5,0,0);// Remove Wave Monsters
ACS_ExecuteAlways(3006,0,5,0,0);// Reinforcement
while((GetInvasionWave() != 6) || (GetInvasionState() != IS_COUNTDOWN))delay(1);
ACS_ExecuteAlways(15854,0,6,0,0);// Remove Wave Monsters
ACS_ExecuteAlways(3006,0,6,0,0);// Reinforcement
delay(35*25);
Floor_LowerByValue(11,15,304);
while((GetInvasionWave() != 7) || (GetInvasionState() != IS_COUNTDOWN))delay(1);
ACS_ExecuteAlways(15854,0,7,0,0);// Remove Wave Monsters
ACS_ExecuteAlways(3006,0,7,0,0);// Reinforcement
Floor_LowerByValue(33,24,1002);
SetMusic("D_CDM18c");
ACS_NamedExecuteAlways("Reset Incursion Settings",0,128.0,0,0);delay(1);
Thing_Activate(85004);//Activates (Hell Incursion Moving Spot)
delay(35*20);
Ceiling_RaiseByValue(14,10,64);
while((GetInvasionWave() != 8) || (GetInvasionState() != IS_COUNTDOWN))delay(1);
ACS_ExecuteAlways(15854,0,8,0,0);// Remove Wave Monsters
ACS_ExecuteAlways(3006,0,8,0,0);// Reinforcement
Thing_ChangeTID(351,0);
Thing_ChangeTID(353,351);
Thing_Activate(85005);//Activates (Hell Incursion Moving Spot)
delay(35*13);
Door_Open(16,12);
while((GetInvasionWave() != 9) || (GetInvasionState() != IS_COUNTDOWN))delay(1);
ACS_ExecuteAlways(15854,0,9,0,0);// Remove Wave Monsters
ACS_ExecuteAlways(3006,0,9,0,0);// Reinforcement
delay(35*10);
Floor_LowerByValue(17,15,616);
while((GetInvasionWave() != 10) || (GetInvasionState() != IS_WAVECOMPLETE))delay(1);
ACS_ExecuteAlways(15854,0,10,0,0);// Remove Wave Monsters
ACS_ExecuteAlways(3006,0,10,0,0);// Reinforcement
Thing_ChangeTID(351,0);
Thing_ChangeTID(354,351);
SetMusic("D_CDM18d");
ACS_NamedExecuteAlways("Reset Incursion Settings",0,128.0,0,0);delay(1);
Thing_Activate(85006);//Activates (Hell Incursion Moving Spot)
while((GetInvasionWave() != 11) || (GetInvasionState() != IS_WAVECOMPLETE))delay(1);
ACS_ExecuteAlways(15854,0,11,0,0);// Remove Wave Monsters
ACS_ExecuteAlways(3006,0,11,0,0);// Reinforcement
Floor_LowerByValue(23,15,118);
while((GetInvasionWave() != 12) || (GetInvasionState() != IS_COUNTDOWN))delay(1);
ACS_ExecuteAlways(15854,0,12,0,0);// Remove Wave Monsters
ACS_ExecuteAlways(3006,0,12,0,0);// Reinforcement
}

Script 4 (int iLine)
{// Unblock Line
For(int i=100;i>=0;i-=5)
{
    TranslucentLine(iLine,i);
    delay(1);
}
SetLineBlocking(iLine,BLOCK_NOTHING);
}

Script 5 (void)
{//Open First Gate
if(FirstGateAvailable == TRUE && FirstGateOpened == FALSE)
{
FirstGateOpened = TRUE;
Thing_Remove(50);
Thing_Remove(51);
delay(35*2);
Floor_LowerByValue(24,15,64);
TagWait(24);
delay(35*2);
Thing_Activate(310);
delay(35*3);
Floor_LowerByValue(10,5,238);
Ceiling_RaiseByValue(10,5,222);
tagwait(10);
delay(35*3);
Thing_Deactivate(310);
}
}

Script 6 (void)
{//Open Second Gate
delay(35*2);
Floor_LowerByValue(25,15,48);
TagWait(25);
delay(35*3);
Ceiling_RaiseByValue(15,12,182);
}

Script 7 (void)
{//Spawn Prototype Secret
Print(s:"A Secret is Revealed!");
LocalAmbientSound("misc/secret",255);
delay(35*2);
Print(s:"Look behind you!");
delay(35*2);
SpawnSpotFacing("Prototype",52,0);
SpawnSpotFacing("Teleportfog",52,0);
delay(35*3);
PrintBold(s:"Prototype Secret Found!");
}

Script 8 (void)
{//Spawn GrinderBattleMech Secret
Print(s:"A Secret is Revealed!");
LocalAmbientSound("misc/secret",255);
delay(35*2);
Print(s:"Look behind you!");
delay(35*2);
SpawnSpotFacing("GrinderBattleMech",53,0);
SpawnSpotFacing("Teleportfog",53,0);
delay(35*3);
PrintBold(s:"Grinder Battle Mech Secret Found!");
}

Script 9 (void)
{// Test
ACS_ExecuteAlways(15854,0,1,0,0);delay(1);
ACS_ExecuteAlways(15854,0,2,0,0);delay(1);
ACS_ExecuteAlways(15854,0,3,0,0);delay(1);
ACS_ExecuteAlways(15854,0,4,0,0);delay(1);
ACS_ExecuteAlways(15854,0,5,0,0);delay(1);
ACS_ExecuteAlways(15854,0,6,0,0);delay(1);
ACS_ExecuteAlways(15854,0,7,0,0);delay(1);
ACS_ExecuteAlways(15854,0,8,0,0);delay(1);
ACS_ExecuteAlways(15854,0,9,0,0);delay(1);
ACS_ExecuteAlways(15854,0,10,0,0);delay(1);
ACS_ExecuteAlways(15854,0,11,0,0);delay(1);
ACS_ExecuteAlways(15854,0,12,0,0);delay(1);
}

Script 10 (void)
{//Unlock Attack Helicopter
Floor_LowerByValue(29,25,120);
}

Script 11 (void)
{// Blocked Mech Exit
if(MechTeleporterAvailable)
{
	if(CheckActorClass(0,"ComplexDoomPlayer"))Print(s:"This emergency teleporter works only for mechs!");
	else Teleport(72);
}
else Print(s:"That mech teleporter is not available yet.");
}

Script 940 (int part)
{//Boss Fight Script
	delay(1);
	str class = GetActorClass(0);
	str resistance = GetActorProperty(0,APROP_DamageFactor);
	GiveInventory("Clip",1);
	if(part == 1)
	{
		Thing_Move(0,939,0);
		SpawnSpotFacing("ZombieMissileTank",941,15999);SpawnSpotFacing("TeleportFog",941,0);//Hitler
		delay(35*3);while(ThingCount(T_NONE,15999))delay(1);
		while(ThingCountNameSector(class,0,939)){delay(1);Thing_Move(0,940,0);}
		SetActorProperty(0,APROP_DamageFactor,0.01);delay(35*30);SetActorProperty(0,APROP_DamageFactor,resistance);
		while(ThingCountSector(T_NONE,0,939)){SectorDamage(939,5000,"Crush","Clip",DAMAGE_NONPLAYERS|DAMAGE_IN_AIR);delay(1);}
	}
	else if(part == 2)
	{
		Thing_Move(0,939,0);
		SpawnSpotFacing("ZombiePlasmaTank",941,15999);SpawnSpotFacing("TeleportFog",942,0);//Toddes
		delay(35*3);while(ThingCount(T_NONE,15999))delay(1);
		while(ThingCountNameSector(class,0,939)){delay(1);Thing_Move(0,940,0);}
		SetActorProperty(0,APROP_DamageFactor,0.01);delay(35*30);SetActorProperty(0,APROP_DamageFactor,resistance);
		while(ThingCountSector(T_NONE,0,939)){SectorDamage(939,5000,"Crush","Clip",DAMAGE_NONPLAYERS|DAMAGE_IN_AIR);delay(1);}
	}
	else if(part == 3)
	{
		Thing_Move(0,939,0);
		SpawnSpotFacing("ZombieAssaultTank",942,15999);SpawnSpotFacing("TeleportFog",943,0);//Cardinal
		delay(35*3);while(ThingCount(T_NONE,15999))delay(1);
		while(ThingCountNameSector(class,0,939)){delay(1);Thing_Move(0,940,0);}
		SetActorProperty(0,APROP_DamageFactor,0.01);delay(35*30);SetActorProperty(0,APROP_DamageFactor,resistance);
		while(ThingCountSector(T_NONE,0,939)){SectorDamage(939,5000,"Crush","Clip",DAMAGE_NONPLAYERS|DAMAGE_IN_AIR);delay(1);}
	}
}

Script 5430 (void){}
Script 5431 (void){}
Script 5432 (void){}
Script 5433 (void){}